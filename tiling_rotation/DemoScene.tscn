[gd_scene load_steps=43 format=2]

[ext_resource path="res://checker.png" type="Texture" id=1]

[sub_resource type="PlaneMesh" id=1]

[sub_resource type="VisualShaderNodeVectorOp" id=2]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 1

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 13.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 0.0, 1, 0.02 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=7]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 1

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]
default_input_values = [ 0, 0.0, 1, 0.02 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 17.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
default_input_values = [ 0, 0.0, 1, 55.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=14]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=15]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorCompose" id=16]
default_input_values = [ 0, 1.0, 1, 1.0, 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=17]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorFunc" id=25]
function = 19

[sub_resource type="VisualShaderNodeVectorOp" id=18]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 4, 4 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=26]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 4, 0 ) ]
operator = 3

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeVectorOp" id=28]

[sub_resource type="VisualShaderNodeExpression" id=29]
output_port_for_preview = 0
size = Vector2( 962, 265 )
expression = "output = fract(cos(dot(input.xy, vec2(13.9898, 8.141))) * 43758.5453);"

[sub_resource type="VisualShaderNodeScalarFunc" id=30]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=31]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=32]
function = 19

[sub_resource type="VisualShaderNodeVectorCompose" id=33]

[sub_resource type="VisualShaderNodeVectorCompose" id=34]

[sub_resource type="VisualShaderNodeTransformCompose" id=35]

[sub_resource type="VisualShaderNodeTransformVecMult" id=36]

[sub_resource type="VisualShaderNodeVectorOp" id=37]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=38]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0 ) ]

[sub_resource type="VisualShaderNodeScalarOp" id=39]
default_input_values = [ 0, 0.0, 1, 6.28 ]
operator = 2

[sub_resource type="VisualShaderNodeExpression" id=40]
size = Vector2( 1027, 486 )
expression = "vec2 texture_coordinate = lod_uv.xy * vec2(textureSize(albedo_texture, 0));
vec2 dx_vtc = dFdx(texture_coordinate);
vec2 dy_vtc = dFdy(texture_coordinate);
float delta_max_sqr = max(dot(dx_vtc, dx_vtc), dot(dy_vtc, dy_vtc));
float mml = 0.5 * log2(delta_max_sqr);
float lod = max(0.0, mml);
output = textureLod(albedo_texture, uv.xy, lod).rgb;"

[sub_resource type="VisualShaderNodeTextureUniform" id=41]
uniform_name = "albedo"

[sub_resource type="VisualShaderNodeVectorOp" id=19]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]
operator = 4

[sub_resource type="VisualShaderNodeScalarFunc" id=20]
function = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=21]

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 42.0 ]
operator = 2

[sub_resource type="VisualShader" id=23]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorOp:3
	vec3 n_in3p1 = vec3(4.00000, 4.00000, 4.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// Input:28
	vec3 n_out28p0 = vec3(UV, 0.0);

// VectorDecompose:8
	float n_out8p0 = n_out28p0.x;
	float n_out8p1 = n_out28p0.y;
	float n_out8p2 = n_out28p0.z;

// ScalarOp:9
	float n_in9p1 = 42.00000;
	float n_out9p0 = n_out8p0 * n_in9p1;

// ScalarFunc:7
	float n_out7p0 = sin(n_out9p0);

// ScalarOp:16
	float n_in16p1 = 13.00000;
	float n_out16p0 = n_out8p0 * n_in16p1;

// ScalarFunc:13
	float n_out13p0 = cos(n_out16p0);

// ScalarOp:15
	float n_out15p0 = n_out7p0 * n_out13p0;

// ScalarOp:17
	float n_in17p1 = 0.02000;
	float n_out17p0 = n_out15p0 * n_in17p1;

// VectorCompose:27
	float n_in27p0 = 1.00000;
	float n_in27p1 = 1.00000;
	float n_in27p2 = 0.00000;
	vec3 n_out27p0 = vec3(n_in27p0, n_in27p1, n_in27p2);

// VectorOp:12
	vec3 n_out12p0 = vec3(n_out17p0) + n_out27p0;

// VectorOp:31
	vec3 n_out31p0 = n_out3p0 + n_out12p0;

// ScalarOp:22
	float n_in22p1 = 17.00000;
	float n_out22p0 = n_out8p1 * n_in22p1;

// ScalarFunc:18
	float n_out18p0 = sin(n_out22p0);

// ScalarOp:23
	float n_in23p1 = 55.00000;
	float n_out23p0 = n_out8p1 * n_in23p1;

// ScalarFunc:19
	float n_out19p0 = cos(n_out23p0);

// ScalarOp:20
	float n_out20p0 = n_out18p0 * n_out19p0;

// ScalarOp:21
	float n_in21p1 = 0.02000;
	float n_out21p0 = n_out20p0 * n_in21p1;

// VectorOp:25
	vec3 n_out25p0 = vec3(n_out21p0) + n_out12p0;

// VectorOp:32
	vec3 n_out32p0 = n_out31p0 + n_out25p0;

// VectorFunc:29
	vec3 n_out29p0 = floor(n_out32p0);

// VectorOp:30
	vec3 n_in30p1 = vec3(4.00000, 4.00000, 0.00000);
	vec3 n_out30p0 = n_out29p0 / n_in30p1;

// Expression:33
	float n_out33p0;
	n_out33p0 = 0.0;
	{
		n_out33p0 = fract(cos(dot(n_out30p0.xy, vec2(13.9898, 8.141))) * 43758.5453);
	}

// ScalarOp:43
	float n_in43p1 = 6.28000;
	float n_out43p0 = n_out33p0 * n_in43p1;

// ScalarFunc:35
	float n_out35p0 = cos(n_out43p0);

// ScalarFunc:34
	float n_out34p0 = sin(n_out43p0);

// ScalarFunc:36
	float n_out36p0 = -(n_out34p0);

// VectorCompose:37
	float n_in37p2 = 0.00000;
	vec3 n_out37p0 = vec3(n_out35p0, n_out36p0, n_in37p2);

// VectorCompose:38
	float n_in38p2 = 0.00000;
	vec3 n_out38p0 = vec3(n_out34p0, n_out35p0, n_in38p2);

// TransformCompose:39
	vec3 n_in39p2 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in39p3 = vec3(0.00000, 0.00000, 0.00000);
	mat4 n_out39p0 = mat4(vec4(n_out37p0, 0.0), vec4(n_out38p0, 0.0), vec4(n_in39p2, 0.0), vec4(n_in39p3, 1.0));

// TransformVectorMult:40
	vec3 n_out40p0 = (n_out39p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorOp:42
	vec3 n_in42p1 = vec3(0.50000, 0.50000, 0.00000);
	vec3 n_out42p0 = n_out40p0 + n_in42p1;

// TextureUniform:45
	vec3 n_out45p0;
	float n_out45p1;
	{
		vec4 n_tex_read = texture(albedo, UV.xy);
		n_out45p0 = n_tex_read.rgb;
		n_out45p1 = n_tex_read.a;
	}

// Expression:44
	vec3 n_out44p0;
	n_out44p0 = vec3(0.0, 0.0, 0.0);
	{
		vec2 texture_coordinate = n_out3p0.xy * vec2(textureSize(albedo, 0));
		vec2 dx_vtc = dFdx(texture_coordinate);
		vec2 dy_vtc = dFdy(texture_coordinate);
		float delta_max_sqr = max(dot(dx_vtc, dx_vtc), dot(dy_vtc, dy_vtc));
		float mml = 0.5 * log2(delta_max_sqr);
		float lod = max(0.0, mml);
		n_out44p0 = textureLod(albedo, n_out42p0.xy, lod).rgb;
	}

// Output:0
	ALBEDO = n_out44p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 246, 241 )
nodes/fragment/0/position = Vector2( 3860, 100 )
nodes/fragment/2/node = SubResource( 9 )
nodes/fragment/2/position = Vector2( 1500, -120 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( 1480, 0 )
nodes/fragment/6/node = SubResource( 19 )
nodes/fragment/6/position = Vector2( 1480, 220 )
nodes/fragment/7/node = SubResource( 20 )
nodes/fragment/7/position = Vector2( -1140, 460 )
nodes/fragment/8/node = SubResource( 21 )
nodes/fragment/8/position = Vector2( -1840, 640 )
nodes/fragment/9/node = SubResource( 22 )
nodes/fragment/9/position = Vector2( -1460, 380 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( -140, 540 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( -1140, 560 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( -800, 480 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( -1460, 560 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( -460, 480 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( -1140, 800 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( -1140, 940 )
nodes/fragment/20/node = SubResource( 10 )
nodes/fragment/20/position = Vector2( -800, 820 )
nodes/fragment/21/node = SubResource( 11 )
nodes/fragment/21/position = Vector2( -460, 760 )
nodes/fragment/22/node = SubResource( 12 )
nodes/fragment/22/position = Vector2( -1460, 740 )
nodes/fragment/23/node = SubResource( 13 )
nodes/fragment/23/position = Vector2( -1460, 920 )
nodes/fragment/25/node = SubResource( 14 )
nodes/fragment/25/position = Vector2( -140, 700 )
nodes/fragment/26/node = SubResource( 15 )
nodes/fragment/26/position = Vector2( 1480, 420 )
nodes/fragment/27/node = SubResource( 16 )
nodes/fragment/27/position = Vector2( -140, 360 )
nodes/fragment/28/node = SubResource( 17 )
nodes/fragment/28/position = Vector2( -2100, 640 )
nodes/fragment/29/node = SubResource( 25 )
nodes/fragment/29/position = Vector2( 880, 540 )
nodes/fragment/30/node = SubResource( 26 )
nodes/fragment/30/position = Vector2( 860, 660 )
nodes/fragment/31/node = SubResource( 27 )
nodes/fragment/31/position = Vector2( 360, 760 )
nodes/fragment/32/node = SubResource( 28 )
nodes/fragment/32/position = Vector2( 360, 940 )
nodes/fragment/33/node = SubResource( 29 )
nodes/fragment/33/position = Vector2( 880, 860 )
nodes/fragment/33/size = Vector2( 962, 265 )
nodes/fragment/33/input_ports = "0,1,input;"
nodes/fragment/33/output_ports = "0,0,output;"
nodes/fragment/33/expression = "output = fract(cos(dot(input.xy, vec2(13.9898, 8.141))) * 43758.5453);"
nodes/fragment/34/node = SubResource( 30 )
nodes/fragment/34/position = Vector2( 2000, 860 )
nodes/fragment/35/node = SubResource( 31 )
nodes/fragment/35/position = Vector2( 2000, 740 )
nodes/fragment/36/node = SubResource( 32 )
nodes/fragment/36/position = Vector2( 2000, 980 )
nodes/fragment/37/node = SubResource( 33 )
nodes/fragment/37/position = Vector2( 2360, 740 )
nodes/fragment/38/node = SubResource( 34 )
nodes/fragment/38/position = Vector2( 2360, 940 )
nodes/fragment/39/node = SubResource( 35 )
nodes/fragment/39/position = Vector2( 2640, 740 )
nodes/fragment/40/node = SubResource( 36 )
nodes/fragment/40/position = Vector2( 2940, 700 )
nodes/fragment/41/node = SubResource( 37 )
nodes/fragment/41/position = Vector2( 1901.5, 281.25 )
nodes/fragment/42/node = SubResource( 38 )
nodes/fragment/42/position = Vector2( 3288.5, 921.25 )
nodes/fragment/43/node = SubResource( 39 )
nodes/fragment/43/position = Vector2( 1893.5, 1084.25 )
nodes/fragment/44/node = SubResource( 40 )
nodes/fragment/44/position = Vector2( 2760, 140 )
nodes/fragment/44/size = Vector2( 1027, 486 )
nodes/fragment/44/input_ports = "0,1,uv;1,1,lod_uv;2,4,albedo_texture;"
nodes/fragment/44/output_ports = "0,1,output;"
nodes/fragment/44/expression = "vec2 texture_coordinate = lod_uv.xy * vec2(textureSize(albedo_texture, 0));
vec2 dx_vtc = dFdx(texture_coordinate);
vec2 dy_vtc = dFdy(texture_coordinate);
float delta_max_sqr = max(dot(dx_vtc, dx_vtc), dot(dy_vtc, dy_vtc));
float mml = 0.5 * log2(delta_max_sqr);
float lod = max(0.0, mml);
output = textureLod(albedo_texture, uv.xy, lod).rgb;"
nodes/fragment/45/node = SubResource( 41 )
nodes/fragment/45/position = Vector2( 2420, 140 )
nodes/fragment/connections = PoolIntArray( 8, 0, 9, 0, 9, 0, 7, 0, 3, 0, 6, 0, 8, 0, 16, 0, 16, 0, 13, 0, 13, 0, 15, 1, 7, 0, 15, 0, 15, 0, 17, 0, 22, 0, 18, 0, 23, 0, 19, 0, 19, 0, 20, 1, 18, 0, 20, 0, 20, 0, 21, 0, 8, 1, 22, 0, 8, 1, 23, 0, 17, 0, 12, 0, 12, 0, 25, 1, 21, 0, 25, 0, 2, 0, 3, 0, 27, 0, 12, 1, 25, 0, 6, 1, 28, 0, 8, 0, 29, 0, 30, 0, 3, 0, 31, 0, 12, 0, 31, 1, 31, 0, 32, 0, 25, 0, 32, 1, 32, 0, 29, 0, 30, 0, 33, 0, 34, 0, 36, 0, 35, 0, 37, 0, 36, 0, 37, 1, 35, 0, 38, 1, 34, 0, 38, 0, 37, 0, 39, 0, 38, 0, 39, 1, 39, 0, 40, 0, 6, 0, 41, 0, 40, 0, 42, 0, 42, 0, 26, 0, 33, 0, 43, 0, 43, 0, 34, 0, 43, 0, 35, 0, 3, 0, 40, 1, 45, 2, 44, 2, 44, 0, 0, 0, 42, 0, 44, 0, 3, 0, 44, 1 )

[sub_resource type="ShaderMaterial" id=24]
shader = SubResource( 23 )
shader_param/albedo = ExtResource( 1 )

[node name="World" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0300937, 0.00307035, -0.00741667 )
mesh = SubResource( 1 )
material/0 = SubResource( 24 )
