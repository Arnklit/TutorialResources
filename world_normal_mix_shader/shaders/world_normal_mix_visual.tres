[gd_resource type="VisualShader" load_steps=41 format=2]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=13]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=14]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=17]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=18]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "albedo_bg"
texture_type = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=20]
function = 11

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "tangent"

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "binormal"

[sub_resource type="VisualShaderNodeVectorOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=25]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=26]

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "albedo_fg"
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeDotProduct" id=30]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=31]

[sub_resource type="VisualShaderNodeScalarUniform" id=32]
uniform_name = "Offset"
hint = 1
min = -1.0
default_value_enabled = true
default_value = 0.5

[sub_resource type="VisualShaderNodeScalarUniform" id=33]
uniform_name = "Edge"
hint = 1
default_value_enabled = true
default_value = 0.1

[sub_resource type="VisualShaderNodeScalarOp" id=34]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=35]

[sub_resource type="VisualShaderNodeInput" id=40]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=41]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=46]
uniform_name = "orm_bg"

[sub_resource type="VisualShaderNodeVectorDecompose" id=47]

[sub_resource type="VisualShaderNodeTextureUniform" id=49]
uniform_name = "orm_fg"

[sub_resource type="VisualShaderNodeVectorOp" id=52]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 2, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=53]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Uniform" id=54]
uniform_name = "uv_scale_bg"
default_value_enabled = true
default_value = Vector3( 1, 1, 0 )

[sub_resource type="VisualShaderNodeTextureUniform" id=6]
uniform_name = "normal_bg"
texture_type = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=55]
uniform_name = "uv_scale_fg"
default_value_enabled = true
default_value = Vector3( 1, 1, 0 )

[sub_resource type="VisualShaderNodeInput" id=56]
input_name = "inv_camera"

[sub_resource type="VisualShaderNodeTransformVecMult" id=57]
default_input_values = [ 0, Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=58]

[sub_resource type="VisualShaderNodeTextureUniform" id=7]
uniform_name = "normal_fg"
texture_type = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=42]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ), 2, 0.0 ]

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform vec3 uv_scale_bg = vec3(1.000000, 1.000000, 0.000000);
uniform sampler2D albedo_bg : hint_albedo;
uniform vec3 uv_scale_fg = vec3(1.000000, 1.000000, 0.000000);
uniform sampler2D albedo_fg : hint_albedo;
uniform float Offset : hint_range(-1, 1) = 0.5;
uniform float Edge : hint_range(0, 1) = 0.1;
uniform sampler2D normal_bg : hint_normal;
uniform sampler2D orm_bg;
uniform sampler2D orm_fg;
uniform sampler2D normal_fg : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// Input:58
	vec3 n_out58p0 = vec3(UV, 0.0);

// VectorUniform:59
	vec3 n_out59p0 = uv_scale_bg;

// VectorOp:57
	vec3 n_out57p0 = n_out58p0 * n_out59p0;

// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(albedo_bg, n_out57p0.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// Input:49
	vec3 n_out49p0 = vec3(UV, 0.0);

// VectorUniform:60
	vec3 n_out60p0 = uv_scale_fg;

// VectorOp:50
	vec3 n_out50p0 = n_out49p0 * n_out60p0;

// TextureUniform:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 n_tex_read = texture(albedo_fg, n_out50p0.xy);
		n_out3p0 = n_tex_read.rgb;
		n_out3p1 = n_tex_read.a;
	}

// ScalarUniform:40
	float n_out40p0 = Offset;

// ScalarUniform:41
	float n_out41p0 = Edge;

// ScalarOp:42
	float n_out42p0 = n_out40p0 - n_out41p0;

// ScalarOp:43
	float n_out43p0 = n_out40p0 + n_out41p0;

// Input:24
	vec3 n_out24p0 = TANGENT;

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(normal_bg, n_out57p0.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:13
	vec3 n_in13p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out13p0 = n_out6p0 * n_in13p1;

// VectorOp:14
	vec3 n_in14p1 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out14p0 = n_out13p0 - n_in14p1;

// VectorDecompose:15
	float n_out15p0 = n_out14p0.x;
	float n_out15p1 = n_out14p0.y;
	float n_out15p2 = n_out14p0.z;

// VectorOp:26
	vec3 n_out26p0 = n_out24p0 * vec3(n_out15p0);

// Input:25
	vec3 n_out25p0 = BINORMAL;

// VectorOp:27
	vec3 n_out27p0 = n_out25p0 * vec3(n_out15p1);

// VectorOp:29
	vec3 n_out29p0 = n_out26p0 + n_out27p0;

// Input:12
	vec3 n_out12p0 = NORMAL;

// ScalarOp:16
	float n_out16p0 = n_out15p0 * n_out15p0;

// ScalarOp:18
	float n_in18p0 = 1.00000;
	float n_out18p0 = n_in18p0 - n_out16p0;

// ScalarOp:17
	float n_out17p0 = n_out15p1 * n_out15p1;

// ScalarOp:19
	float n_out19p0 = n_out18p0 - n_out17p0;

// ScalarFunc:20
	float n_out20p0 = sqrt(n_out19p0);

// VectorOp:28
	vec3 n_out28p0 = n_out12p0 * vec3(n_out20p0);

// VectorOp:30
	vec3 n_out30p0 = n_out29p0 + n_out28p0;

// Input:61
	mat4 n_out61p0 = INV_CAMERA_MATRIX;

// TransformVectorMult:62
	vec3 n_in62p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out62p0 = (n_out61p0 * vec4(n_in62p1, 0.0)).xyz;

// DotProduct:38
	float n_out38p0 = dot(n_out30p0, n_out62p0);

// ScalarSmoothStep:39
	float n_out39p0 = smoothstep(n_out42p0, n_out43p0, n_out38p0);

// VectorScalarMix:8
	vec3 n_out8p0 = mix(n_out2p0, n_out3p0, n_out39p0);

// TextureUniform:51
	vec3 n_out51p0;
	float n_out51p1;
	{
		vec4 n_tex_read = texture(orm_bg, n_out57p0.xy);
		n_out51p0 = n_tex_read.rgb;
		n_out51p1 = n_tex_read.a;
	}

// TextureUniform:54
	vec3 n_out54p0;
	float n_out54p1;
	{
		vec4 n_tex_read = texture(orm_fg, n_out50p0.xy);
		n_out54p0 = n_tex_read.rgb;
		n_out54p1 = n_tex_read.a;
	}

// VectorScalarMix:63
	vec3 n_out63p0 = mix(n_out51p0, n_out54p0, n_out39p0);

// VectorDecompose:52
	float n_out52p0 = n_out63p0.x;
	float n_out52p1 = n_out63p0.y;
	float n_out52p2 = n_out63p0.z;

// TextureUniform:7
	vec3 n_out7p0;
	float n_out7p1;
	{
		vec4 n_tex_read = texture(normal_fg, n_out50p0.xy);
		n_out7p0 = n_tex_read.rgb;
		n_out7p1 = n_tex_read.a;
	}

// VectorScalarMix:11
	vec3 n_out11p0 = mix(n_out6p0, n_out7p0, n_out39p0);

// Output:0
	ALBEDO = n_out8p0;
	METALLIC = n_out52p2;
	ROUGHNESS = n_out52p1;
	AO = n_out52p0;
	NORMALMAP = n_out11p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -902.805, -140.923 )
nodes/fragment/0/position = Vector2( 1920, 320 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 220, -40 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 220, 600 )
nodes/fragment/6/node = SubResource( 6 )
nodes/fragment/6/position = Vector2( 220, 380 )
nodes/fragment/7/node = SubResource( 7 )
nodes/fragment/7/position = Vector2( 220, 1000 )
nodes/fragment/8/node = SubResource( 42 )
nodes/fragment/8/position = Vector2( 1580, 320 )
nodes/fragment/11/node = SubResource( 11 )
nodes/fragment/11/position = Vector2( 1580, 740 )
nodes/fragment/12/node = SubResource( 12 )
nodes/fragment/12/position = Vector2( 860, -600 )
nodes/fragment/13/node = SubResource( 13 )
nodes/fragment/13/position = Vector2( 620, -1120 )
nodes/fragment/14/node = SubResource( 14 )
nodes/fragment/14/position = Vector2( 620, -1000 )
nodes/fragment/15/node = SubResource( 15 )
nodes/fragment/15/position = Vector2( 620, -880 )
nodes/fragment/16/node = SubResource( 16 )
nodes/fragment/16/position = Vector2( 620, -780 )
nodes/fragment/17/node = SubResource( 17 )
nodes/fragment/17/position = Vector2( 620, -660 )
nodes/fragment/18/node = SubResource( 18 )
nodes/fragment/18/position = Vector2( 620, -540 )
nodes/fragment/19/node = SubResource( 19 )
nodes/fragment/19/position = Vector2( 620, -420 )
nodes/fragment/20/node = SubResource( 20 )
nodes/fragment/20/position = Vector2( 600, -300 )
nodes/fragment/24/node = SubResource( 21 )
nodes/fragment/24/position = Vector2( 860, -1000 )
nodes/fragment/25/node = SubResource( 22 )
nodes/fragment/25/position = Vector2( 860, -800 )
nodes/fragment/26/node = SubResource( 23 )
nodes/fragment/26/position = Vector2( 860, -920 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( 860, -720 )
nodes/fragment/28/node = SubResource( 25 )
nodes/fragment/28/position = Vector2( 860, -520 )
nodes/fragment/29/node = SubResource( 26 )
nodes/fragment/29/position = Vector2( 1120, -840 )
nodes/fragment/30/node = SubResource( 27 )
nodes/fragment/30/position = Vector2( 1120, -720 )
nodes/fragment/38/node = SubResource( 30 )
nodes/fragment/38/position = Vector2( 1240, -340 )
nodes/fragment/39/node = SubResource( 31 )
nodes/fragment/39/position = Vector2( 1240, 0 )
nodes/fragment/40/node = SubResource( 32 )
nodes/fragment/40/position = Vector2( 860, -320 )
nodes/fragment/41/node = SubResource( 33 )
nodes/fragment/41/position = Vector2( 860, -80 )
nodes/fragment/42/node = SubResource( 34 )
nodes/fragment/42/position = Vector2( 1240, -240 )
nodes/fragment/43/node = SubResource( 35 )
nodes/fragment/43/position = Vector2( 1240, -120 )
nodes/fragment/49/node = SubResource( 40 )
nodes/fragment/49/position = Vector2( -200, 800 )
nodes/fragment/50/node = SubResource( 41 )
nodes/fragment/50/position = Vector2( -20, 820 )
nodes/fragment/51/node = SubResource( 46 )
nodes/fragment/51/position = Vector2( 220, 160 )
nodes/fragment/52/node = SubResource( 47 )
nodes/fragment/52/position = Vector2( 1580, 600 )
nodes/fragment/54/node = SubResource( 49 )
nodes/fragment/54/position = Vector2( 220, 800 )
nodes/fragment/57/node = SubResource( 52 )
nodes/fragment/57/position = Vector2( 0, 220 )
nodes/fragment/58/node = SubResource( 53 )
nodes/fragment/58/position = Vector2( -180, 220 )
nodes/fragment/59/node = SubResource( 54 )
nodes/fragment/59/position = Vector2( -440, 320 )
nodes/fragment/60/node = SubResource( 55 )
nodes/fragment/60/position = Vector2( -480, 960 )
nodes/fragment/61/node = SubResource( 56 )
nodes/fragment/61/position = Vector2( 600, -200 )
nodes/fragment/62/node = SubResource( 57 )
nodes/fragment/62/position = Vector2( 600, -120 )
nodes/fragment/63/node = SubResource( 58 )
nodes/fragment/63/position = Vector2( 1580, 460 )
nodes/fragment/connections = PoolIntArray( 2, 0, 8, 0, 3, 0, 8, 1, 6, 0, 11, 0, 7, 0, 11, 1, 13, 0, 14, 0, 14, 0, 15, 0, 15, 0, 16, 0, 15, 0, 16, 1, 15, 1, 17, 0, 15, 1, 17, 1, 16, 0, 18, 1, 18, 0, 19, 0, 17, 0, 19, 1, 19, 0, 20, 0, 24, 0, 26, 0, 15, 0, 26, 1, 25, 0, 27, 0, 15, 1, 27, 1, 12, 0, 28, 0, 20, 0, 28, 1, 26, 0, 29, 0, 27, 0, 29, 1, 29, 0, 30, 0, 28, 0, 30, 1, 6, 0, 13, 0, 40, 0, 42, 0, 41, 0, 42, 1, 40, 0, 43, 0, 41, 0, 43, 1, 38, 0, 39, 2, 42, 0, 39, 0, 43, 0, 39, 1, 11, 0, 0, 8, 49, 0, 50, 0, 50, 0, 3, 0, 50, 0, 7, 0, 50, 0, 54, 0, 58, 0, 57, 0, 57, 0, 2, 0, 57, 0, 51, 0, 57, 0, 6, 0, 59, 0, 57, 1, 60, 0, 50, 1, 61, 0, 62, 0, 30, 0, 38, 0, 62, 0, 38, 1, 39, 0, 8, 2, 39, 0, 11, 2, 51, 0, 63, 0, 54, 0, 63, 1, 39, 0, 63, 2, 63, 0, 52, 0, 52, 0, 0, 6, 52, 1, 0, 3, 52, 2, 0, 2, 8, 0, 0, 0 )
